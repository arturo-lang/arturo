tau: 6.283185307179586
root: function [x] -> @[sqrt x, neg sqrt x]
asins: function [x] -> @[asin x, (asin x)+tau, (asin x)-tau]
format: function [x] -> @[to :string .format:".2f" x]

mapcat: function [inp, f][
   inp ++ map var'inp 'x -> call f @[x]
   return var'inp
]

; func root(x:float):seq[float] = @[sqrt(x),-sqrt(x)]
; func asin(x:float):seq[float] = @[arcsin(x),arcsin(x)+TAU,arcsin(x)-TAU]
; func format(x:float):seq[string] = @[&"{x:.2f}"]

; #'bind' is a nim keyword, how about an infix operator instead
; #our bind is the standard map+cat
; func `-->`[T,U](input: openArray[T],f: T->seq[U]):seq[U] =
;   input.map(f).concat

arr: new [0.5]
inspect mapcat mapcat mapcat 'arr 'root 'asins 'format

; echo [0.5] --> root --> asin --> format
; Output:
; @["0.79", "7.07", "-5.50", "-0.79", "5.50", "-7.07"]