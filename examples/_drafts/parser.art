ipAddress: [
    :version (
        parts: to [:integer] split.by:"." to :string &
        all? @[
            parts\0 >= 0 parts\0 =< 255
            parts\1 >= 0 parts\1 =< 255
            parts\2 >= 0 parts\2 =< 255
        ]
    )
    :attribute (
        x: to :integer to :string &
        and? 0 =< x 255 >= x)
]

repl: function [blk,v][
    res: new []
    loop blk 'it [
        if? it = & [
            if? attribute? v [
                'res ++ to :word "first"
                'res ++ @[@[v]]
            ]
            else [
                'res ++ v
            ]
        ]
        else [
            'res ++ it
        ]
    ]
    return res
]

parse: function [in,rules][
    pos: 0
    i: 0
    while [i < size rules][
        rule: rules \ i
        item: in \ pos
        case [(type rule)=]
            when? [:type][
                if rule <> type item -> return false
                if (i+1) < size rules [
                    if inline? rules \ i+1 [
                        i: i + 1
                        doable: to :block repl rules \ i item 
                        unless do doable -> return false
                    ]
                ]
            ]
            else [
                print ["found something else:" rule]
            ]
        i: i + 1
        pos: pos + 1
    ]
    return true
]

print parse to :block "123.123.123.123" ipAddress

loop ["123.123.123.123" "3.2342.123.123" "a.b.c.d.e" "hello world"] 'ip [
    print [ip "=>" parse to :block ip ipAddress]
]
