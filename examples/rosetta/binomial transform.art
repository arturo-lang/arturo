; by @Krenium

choose: function [n k][
    div div factorial n factorial n - k factorial k
]

forward: function [a][
    map 0..dec size a 'n ->
        sum map 0..n 'k ->
            a\[k] * choose n k
]

inverse: function [b][
    map 0..dec size b 'n ->
        sum map 0..n 'k ->
            b\[k] * mul choose n k pow neg 1 n - k
]

loop [
    "Catalan" [1 1 2 5 14 42 132 429 1430 4862 16796 58786 208012 742900 2674440 9694845 35357670 129644790 477638700 1767263190]
    "Prime flip-flop" [0 1 1 0 1 0 1 0 0 0 1 0 1 0 0 0 1 0 1 0]
    "Fibonacci" [0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181]
    "Padovan" [1 0 0 1 0 1 1 1 2 2 3 4 5 7 9 12 16 21 28 37]
] [name seq] [
    print ~Â« -~~=====<{ |name| }>=====~~-
    print seq
    print "Forward binomial transform:"
    print fwd: <= forward seq
    print "Inverse binomial transform:"
    print inverse seq
    print "Round trip:"
    print inverse fwd
    print ""
]