pDigits: [2 3 5 7]
 
lst: map pDigits 'd -> @[d]
result: []

while [0 <> size lst][
    nextList: []
    loop lst 'digitSeq [
        currSum: sum digitSeq
        loop pDigits 'n [
            newSum: currSum + n
            newDigitSeq: digitSeq ++ n
            when.has: newSum [
                [< 13] -> 'nextList ++ @[newDigitSeq]
                [= 13] -> 'result ++ @[to :integer join to [:string] newDigitSeq]
                true   -> break
            ]
        ]
    ]
    lst: new nextList
]

loop split.every: 10 result 'a -> 
    print map a => [pad to :string & 6]