;------------------------------------------
; Configuration
;------------------------------------------

API_URL: "https://rosettacode.org/w/api.php"

;------------------------------------------
; Helper Functions
;------------------------------------------

fetchCategory: function [category][
    results: []
    continue: ""
    
    while Ã¸ [
        ; build query parameters
        params: #[
            action: "query"
            list: "categorymembers"
            cmtitle: ~"Category:|category|"
            cmlimit: "500"
            format: "json"
        ]
        
        ; add continue parameter if we have one
        unless empty? continue ->
            params\cmcontinue: continue

        ; perform API request
        response: request API_URL params
        body: read.json response\body
        
        ; extract page titles and add to results
        'results ++ map body\query\categorymembers 'page ->
            page\title
            
        ; check if we need to continue
        switch key? body 'continue 
            -> continue: body\continue\cmcontinue
            -> break
    ]
    
    return results
]

competitors: arg

print "Fetching all programming tasks..."
allTasks: fetchCategory "Programming_Tasks"

print ~"Fetching tasks implemented in Arturo..."
arturoTasks: fetchCategory "arturo"
arturoUnimplemented: difference allTasks arturoTasks

print ~"Fetching tasks implemented in competitors..."
competitorsTasks: map competitors 'comp [
    print ["\t-" capitalize comp]
    fetchCategory comp
]

commonInCompetitors: fold.seed:first competitorsTasks drop competitorsTasks [a b][ intersection a b ]
print.lines intersection arturoUnimplemented commonInCompetitors

